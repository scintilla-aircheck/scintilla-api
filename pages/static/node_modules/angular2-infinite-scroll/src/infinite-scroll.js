"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var scroller_1 = require('./scroller');
var axis_resolver_1 = require('./axis-resolver');
var InfiniteScroll = (function () {
    function InfiniteScroll(element, zone, axis) {
        this.element = element;
        this.zone = zone;
        this.axis = axis;
        this._distanceDown = 2;
        this._distanceUp = 1.5;
        this._throttle = 300;
        this._disabled = false;
        this.scrollWindow = true;
        this._immediate = false;
        this._horizontal = false;
        this._alwaysCallback = false;
        this.scrolled = new core_1.EventEmitter();
        this.scrolledUp = new core_1.EventEmitter();
    }
    InfiniteScroll.prototype.ngOnInit = function () {
        var containerElement = this.scrollWindow ? window : this.element;
        this.scroller = new scroller_1.Scroller(containerElement, setInterval, this.element, this.onScrollDown.bind(this), this.onScrollUp.bind(this), this._distanceDown, this._distanceUp, {}, this._throttle, this._immediate, this._horizontal, this._alwaysCallback, this._disabled, this.axis);
    };
    InfiniteScroll.prototype.ngOnDestroy = function () {
        this.scroller.clean();
    };
    InfiniteScroll.prototype.ngOnChanges = function (changes) {
        if (changes['_disabled'] && this.scroller) {
            this.scroller.handleInfiniteScrollDisabled(changes['_disabled'].currentValue);
        }
    };
    InfiniteScroll.prototype.onScrollDown = function (data) {
        var _this = this;
        if (data === void 0) { data = {}; }
        this.zone.run(function () { return _this.scrolled.next(data); });
    };
    InfiniteScroll.prototype.onScrollUp = function (data) {
        var _this = this;
        if (data === void 0) { data = {}; }
        this.zone.run(function () { return _this.scrolledUp.next(data); });
    };
    __decorate([
        core_1.Input('infiniteScrollDistance'), 
        __metadata('design:type', Number)
    ], InfiniteScroll.prototype, "_distanceDown", void 0);
    __decorate([
        core_1.Input('infiniteScrollUpDistance'), 
        __metadata('design:type', Number)
    ], InfiniteScroll.prototype, "_distanceUp", void 0);
    __decorate([
        core_1.Input('infiniteScrollThrottle'), 
        __metadata('design:type', Number)
    ], InfiniteScroll.prototype, "_throttle", void 0);
    __decorate([
        core_1.Input('infiniteScrollDisabled'), 
        __metadata('design:type', Boolean)
    ], InfiniteScroll.prototype, "_disabled", void 0);
    __decorate([
        core_1.Input('scrollWindow'), 
        __metadata('design:type', Boolean)
    ], InfiniteScroll.prototype, "scrollWindow", void 0);
    __decorate([
        core_1.Input('immediateCheck'), 
        __metadata('design:type', Boolean)
    ], InfiniteScroll.prototype, "_immediate", void 0);
    __decorate([
        core_1.Input('horizontal'), 
        __metadata('design:type', Boolean)
    ], InfiniteScroll.prototype, "_horizontal", void 0);
    __decorate([
        core_1.Input('alwaysCallback'), 
        __metadata('design:type', Boolean)
    ], InfiniteScroll.prototype, "_alwaysCallback", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], InfiniteScroll.prototype, "scrolled", void 0);
    __decorate([
        core_1.Output(), 
        __metadata('design:type', Object)
    ], InfiniteScroll.prototype, "scrolledUp", void 0);
    InfiniteScroll = __decorate([
        core_1.Directive({
            selector: '[infinite-scroll]'
        }), 
        __metadata('design:paramtypes', [core_1.ElementRef, core_1.NgZone, axis_resolver_1.AxisResolver])
    ], InfiniteScroll);
    return InfiniteScroll;
}());
exports.InfiniteScroll = InfiniteScroll;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5maW5pdGUtc2Nyb2xsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaW5maW5pdGUtc2Nyb2xsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxxQkFBd0gsZUFBZSxDQUFDLENBQUE7QUFDeEkseUJBQXlCLFlBQVksQ0FBQyxDQUFBO0FBQ3RDLDhCQUE2QixpQkFBaUIsQ0FBQyxDQUFBO0FBSy9DO0lBZUUsd0JBQ1UsT0FBbUIsRUFDbkIsSUFBWSxFQUNaLElBQWtCO1FBRmxCLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFDbkIsU0FBSSxHQUFKLElBQUksQ0FBUTtRQUNaLFNBQUksR0FBSixJQUFJLENBQWM7UUFmSyxrQkFBYSxHQUFXLENBQUMsQ0FBQztRQUN4QixnQkFBVyxHQUFXLEdBQUcsQ0FBQztRQUM1QixjQUFTLEdBQVcsR0FBRyxDQUFDO1FBQ3hCLGNBQVMsR0FBWSxLQUFLLENBQUM7UUFDckMsaUJBQVksR0FBWSxJQUFJLENBQUM7UUFDM0IsZUFBVSxHQUFZLEtBQUssQ0FBQztRQUNoQyxnQkFBVyxHQUFZLEtBQUssQ0FBQztRQUN6QixvQkFBZSxHQUFZLEtBQUssQ0FBQztRQUVoRCxhQUFRLEdBQUcsSUFBSSxtQkFBWSxFQUFFLENBQUM7UUFDOUIsZUFBVSxHQUFHLElBQUksbUJBQVksRUFBRSxDQUFDO0lBTXZDLENBQUM7SUFFSixpQ0FBUSxHQUFSO1FBQ0UsSUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsWUFBWSxHQUFHLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ25FLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxtQkFBUSxDQUFDLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxJQUFJLENBQUMsT0FBTyxFQUNwRSxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFDeEQsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUN4RCxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLGVBQWUsRUFDdkQsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELG9DQUFXLEdBQVg7UUFDRSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3hCLENBQUM7SUFFRCxvQ0FBVyxHQUFYLFVBQVksT0FBc0I7UUFDaEMsRUFBRSxDQUFBLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQSxDQUFDO1lBQ3hDLElBQUksQ0FBQyxRQUFRLENBQUMsNEJBQTRCLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2hGLENBQUM7SUFDSCxDQUFDO0lBRUQscUNBQVksR0FBWixVQUFhLElBQVM7UUFBdEIsaUJBRUM7UUFGWSxvQkFBUyxHQUFULFNBQVM7UUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUF4QixDQUF3QixDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELG1DQUFVLEdBQVYsVUFBVyxJQUFTO1FBQXBCLGlCQUVDO1FBRlUsb0JBQVMsR0FBVCxTQUFTO1FBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGNBQU0sT0FBQSxLQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBMUIsQ0FBMEIsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUEzQ0Q7UUFBQyxZQUFLLENBQUMsd0JBQXdCLENBQUM7O3lEQUFBO0lBQ2hDO1FBQUMsWUFBSyxDQUFDLDBCQUEwQixDQUFDOzt1REFBQTtJQUNsQztRQUFDLFlBQUssQ0FBQyx3QkFBd0IsQ0FBQzs7cURBQUE7SUFDaEM7UUFBQyxZQUFLLENBQUMsd0JBQXdCLENBQUM7O3FEQUFBO0lBQ2hDO1FBQUMsWUFBSyxDQUFDLGNBQWMsQ0FBQzs7d0RBQUE7SUFDdEI7UUFBQyxZQUFLLENBQUMsZ0JBQWdCLENBQUM7O3NEQUFBO0lBQ3hCO1FBQUMsWUFBSyxDQUFDLFlBQVksQ0FBQzs7dURBQUE7SUFDcEI7UUFBQyxZQUFLLENBQUMsZ0JBQWdCLENBQUM7OzJEQUFBO0lBRXhCO1FBQUMsYUFBTSxFQUFFOztvREFBQTtJQUNUO1FBQUMsYUFBTSxFQUFFOztzREFBQTtJQWhCWDtRQUFDLGdCQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsbUJBQW1CO1NBQzlCLENBQUM7O3NCQUFBO0lBZ0RGLHFCQUFDO0FBQUQsQ0FBQyxBQS9DRCxJQStDQztBQS9DWSxzQkFBYyxpQkErQzFCLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBPbkluaXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTY3JvbGxlciB9IGZyb20gJy4vc2Nyb2xsZXInO1xuaW1wb3J0IHsgQXhpc1Jlc29sdmVyIH0gZnJvbSAnLi9heGlzLXJlc29sdmVyJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2luZmluaXRlLXNjcm9sbF0nXG59KVxuZXhwb3J0IGNsYXNzIEluZmluaXRlU2Nyb2xsIGltcGxlbWVudHMgT25EZXN0cm95LCBPbkluaXQsIE9uQ2hhbmdlcyB7XG4gIHB1YmxpYyBzY3JvbGxlcjogU2Nyb2xsZXI7XG5cbiAgQElucHV0KCdpbmZpbml0ZVNjcm9sbERpc3RhbmNlJykgX2Rpc3RhbmNlRG93bjogbnVtYmVyID0gMjtcbiAgQElucHV0KCdpbmZpbml0ZVNjcm9sbFVwRGlzdGFuY2UnKSBfZGlzdGFuY2VVcDogbnVtYmVyID0gMS41O1xuICBASW5wdXQoJ2luZmluaXRlU2Nyb2xsVGhyb3R0bGUnKSBfdGhyb3R0bGU6IG51bWJlciA9IDMwMDtcbiAgQElucHV0KCdpbmZpbml0ZVNjcm9sbERpc2FibGVkJykgX2Rpc2FibGVkOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgnc2Nyb2xsV2luZG93Jykgc2Nyb2xsV2luZG93OiBib29sZWFuID0gdHJ1ZTtcbiAgQElucHV0KCdpbW1lZGlhdGVDaGVjaycpIF9pbW1lZGlhdGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCdob3Jpem9udGFsJykgX2hvcml6b250YWw6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCdhbHdheXNDYWxsYmFjaycpIF9hbHdheXNDYWxsYmFjazogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBPdXRwdXQoKSBzY3JvbGxlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHNjcm9sbGVkVXAgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmLFxuICAgIHByaXZhdGUgem9uZTogTmdab25lLFxuICAgIHByaXZhdGUgYXhpczogQXhpc1Jlc29sdmVyXG4gICkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICBjb25zdCBjb250YWluZXJFbGVtZW50ID0gdGhpcy5zY3JvbGxXaW5kb3cgPyB3aW5kb3cgOiB0aGlzLmVsZW1lbnQ7XG4gICAgdGhpcy5zY3JvbGxlciA9IG5ldyBTY3JvbGxlcihjb250YWluZXJFbGVtZW50LCBzZXRJbnRlcnZhbCwgdGhpcy5lbGVtZW50LFxuICAgICAgICB0aGlzLm9uU2Nyb2xsRG93bi5iaW5kKHRoaXMpLCB0aGlzLm9uU2Nyb2xsVXAuYmluZCh0aGlzKSxcbiAgICAgICAgdGhpcy5fZGlzdGFuY2VEb3duLCB0aGlzLl9kaXN0YW5jZVVwLCB7fSwgdGhpcy5fdGhyb3R0bGUsXG4gICAgICAgIHRoaXMuX2ltbWVkaWF0ZSwgdGhpcy5faG9yaXpvbnRhbCwgdGhpcy5fYWx3YXlzQ2FsbGJhY2ssXG4gICAgICAgIHRoaXMuX2Rpc2FibGVkLCB0aGlzLmF4aXMpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3kgKCkge1xuICAgIHRoaXMuc2Nyb2xsZXIuY2xlYW4oKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICBpZihjaGFuZ2VzWydfZGlzYWJsZWQnXSAmJiB0aGlzLnNjcm9sbGVyKXtcbiAgICAgIHRoaXMuc2Nyb2xsZXIuaGFuZGxlSW5maW5pdGVTY3JvbGxEaXNhYmxlZChjaGFuZ2VzWydfZGlzYWJsZWQnXS5jdXJyZW50VmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIG9uU2Nyb2xsRG93bihkYXRhID0ge30pIHtcbiAgICB0aGlzLnpvbmUucnVuKCgpID0+IHRoaXMuc2Nyb2xsZWQubmV4dChkYXRhKSk7XG4gIH1cblxuICBvblNjcm9sbFVwKGRhdGEgPSB7fSkge1xuICAgIHRoaXMuem9uZS5ydW4oKCkgPT4gdGhpcy5zY3JvbGxlZFVwLm5leHQoZGF0YSkpO1xuICB9XG59XG4iXX0=