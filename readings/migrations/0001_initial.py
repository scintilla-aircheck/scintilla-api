# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-20 20:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mixins.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('deployments', '0001_initial'),
        ('platforms', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalibratedReading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('value', mixins.fields.DataField(blank=True, decimal_places=12, max_digits=15, null=True)),
                ('average_over_seconds', models.IntegerField(default=0, help_text='If the value is an average reading over time, how many seconds is the average taken over? If it is not an average, set average_over_seconds = 0')),
                ('longitude', mixins.fields.GeoCoordinateField(blank=True, decimal_places=12, max_digits=15, null=True)),
                ('latitude', mixins.fields.GeoCoordinateField(blank=True, decimal_places=12, max_digits=15, null=True)),
                ('unit', models.IntegerField(blank=True, choices=[(0, 'None'), (1, 'PPM'), (2, 'PPB'), (3, 'UG_M3'), (4, 'DEGREES_F'), (5, 'DEGREES_C'), (6, 'VOLTS')], default=0, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='deployments.Device')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
                ('value', mixins.fields.DataField(blank=True, decimal_places=12, max_digits=15, null=True)),
                ('average_over_seconds', models.IntegerField(default=0, help_text='If the value is an average reading over time, how many seconds is the average taken over? If it is not an average, set average_over_seconds = 0')),
                ('longitude', mixins.fields.GeoCoordinateField(blank=True, decimal_places=12, max_digits=15, null=True)),
                ('latitude', mixins.fields.GeoCoordinateField(blank=True, decimal_places=12, max_digits=15, null=True)),
                ('unit', models.IntegerField(blank=True, choices=[(0, 'None'), (1, 'PPM'), (2, 'PPB'), (3, 'UG_M3'), (4, 'DEGREES_F'), (5, 'DEGREES_C'), (6, 'VOLTS')], default=0, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='deployments.Device')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReadingGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'abstract': False,
                'ordering': ['-date_created'],
            },
        ),
        migrations.AddField(
            model_name='reading',
            name='reading_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readings.ReadingGroup'),
        ),
        migrations.AddField(
            model_name='reading',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platforms.Sensor'),
        ),
        migrations.AddField(
            model_name='calibratedreading',
            name='reading',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readings.Reading'),
        ),
        migrations.AddField(
            model_name='calibratedreading',
            name='sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='platforms.Sensor'),
        ),
    ]
